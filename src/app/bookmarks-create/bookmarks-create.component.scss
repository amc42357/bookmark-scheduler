@use '../../styles/variables' as *;
@use '../../styles/mixins' as *;
@use '../../styles/global-styles' as *;

// Component-specific styles
.form-container {
  // All CSS declarations first
  max-width: 600px;
  margin: 0 auto;
  padding: 2rem;
  background: var(--mat-sidenav-container-background-color, #fff);
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  transition: all 0.3s ease;
  
  // Mixins and nested rules after all declarations
  @include form-container;
  
  // Hover state
  &:hover {
    box-shadow: 0 6px 24px rgba(0, 0, 0, 0.12);
  }
}

h2 {
  // Move all declarations before any nested rules
  color: var(--mat-primary);
  margin-bottom: 2rem;
  font-weight: 500;
  text-align: center;
  font-size: 1.5rem;
}

.form-actions {
  // Move all declarations before any nested rules
  margin-top: 2rem;
  display: flex;
  justify-content: flex-end;
  
  // Nested rules after all declarations
  & {
    button {
      // Move all button declarations before any nested rules
      min-width: 120px;
      padding: 0.5rem 1.5rem;
      font-weight: 500;
      transition: all 0.2s ease;
      
      // Nested rules after all declarations
      & {
        &:hover {
          transform: translateY(-1px);
        }
        
        &:active {
          transform: translateY(0);
        }
      }
    }
  }
}

.tab-capture-row {
  // Move all declarations before any nested rules
  display: flex;
  justify-content: flex-end;
  margin-bottom: 1.5rem;
  
  // Nested rules after all declarations
  & {
    button {
      // Move all button declarations before any nested rules
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      font-weight: 500;
      
      // Nested rules after all declarations
      & {
        mat-icon {
          font-size: 18px;
          width: 18px;
          height: 18px;
        }
      }
    }
  }
}

// Form fields
mat-form-field {
  // Move all declarations before any nested rules
  width: 100%;
  margin-bottom: 1rem;
  
  // Nested rules after all declarations
  & {
    &.mat-mdc-form-field {
      --mat-form-field-container-vertical-padding: 12px;
    }
    
    .mat-mdc-text-field-wrapper {
      // Move all wrapper declarations before any nested rules
      border-radius: 8px;
      transition: all 0.2s ease;
      
      // Nested rules after all declarations
      & {
        &:hover {
          .mat-mdc-form-field-focus-overlay {
            opacity: 0.08;
          }
        }
      }
    }
    
    .mat-mdc-form-field-focus-overlay {
      transition: opacity 0.2s ease;
    }
  }
  
  .mdc-line-ripple {
    display: none;
  }
  
  .mat-mdc-form-field-infix {
    min-height: 48px;
    padding-top: 12px;
    padding-bottom: 12px;
  }
  
  .mat-mdc-form-field-subscript-wrapper {
    margin-top: 4px;
  }
  
  .mat-mdc-form-field-error {
    font-size: 0.75rem;
    line-height: 1.4;
  }
  
  .mat-mdc-form-field-hint {
    font-size: 0.75rem;
    line-height: 1.4;
    color: var(--mat-secondary-text);
  }
}

// Date and time fields
.datetime-row {
  display: flex;
  gap: 1rem;
  margin-bottom: 1rem;
  
  .date-field,
  .time-field {
    flex: 1;
    min-width: 0; // Prevents flex items from overflowing
  }
  
  @media (max-width: 480px) {
    flex-direction: column;
    gap: 1rem;
  }
}

// Tags
mat-chip-grid {
  // Move all declarations before any nested rules
  min-height: 56px;
  padding: 8px 0;
  
  // Nested rules after all declarations
  & {
    .mdc-evolution-chip-set__chips {
      gap: 8px;
    }
    
    .mat-mdc-chip {
      // Move all chip declarations before any nested rules
      border-radius: 16px;
      padding: 0 12px;
      height: 32px;
      font-size: 0.875rem;
      
      // Nested rules after all declarations
      & {
        .mat-mdc-chip-remove {
          // Move all remove button declarations before any nested rules
          opacity: 0.7;
          transition: opacity 0.2s ease;
          
          // Nested rules after all declarations
          & {
            &:hover {
              opacity: 1;
            }
          }
        }
      }
    }
  
  }
  
  input {
    min-width: 120px;
    margin: 4px 0;
    font-size: 0.875rem;
  }
}

// Spinner and loading state
.spinner {
  margin-right: 8px;
  vertical-align: middle;
  --mdc-circular-progress-active-indicator-color: currentColor;
}

// Form feedback
.form-feedback {
  margin-top: 1rem;
  
  .feedback-error {
    display: block;
    color: var(--mat-warn);
    font-size: 0.875rem;
    line-height: 1.5;
    margin-bottom: 0.5rem;
  }
}

// Responsive adjustments
@media (max-width: 600px) {
  .form-container {
    padding: 1.5rem;
    border-radius: 0;
  }
}

